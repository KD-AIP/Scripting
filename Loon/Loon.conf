[General]
skip-proxy = 169.254.0.0/16, 192.0.2.0/24, 192.168.0.0/16, 198.51.100.0/24, 224.0.0.0/4, *.local,localhostlocal, 127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, ::ffff:0.0.0.0/1, ::ffff:128.0.0.0/1, localhost, *.crashlytics.com, raw.githubusercontent.com, wl.is
dns-server = 1.1.1.1, 1.0.0.1, 119.29.29.29, 8.8.8.8, 8.4.4.4
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
allow-udp-proxy = true
host = 127.0.0.1

[Remote Proxy]

[Remote Filter]


[Proxy]
# 内置 DIRECT、REJECT 策略

Fake iAP Server 01 = Shadowsocks, 139.162.35.212, 10086, aes-256-gcm, ".shdqqy2ruAzJK6EAy(T"
Fake iAP Server 02 = Shadowsocks, 34.68.164.252, 10086, aes-256-gcm, ".shdqqy2ruAzJK6EAy(T"
Fake iAP Server 03 = Shadowsocks, 52.187.169.27, 10086, aes-256-gcm, ".shdqqy2ruAzJK6EAy(T"

🚫 ad-gif = reject-tinygif
🔴 ad-block = reject
🟢 ad-pass = direct, interface = en0, 

[Proxy Group]
FINAL = select, 🟢 DIRECT, PROXY
IAP-PREMIUM = select, FakeiAP-Server, 🟢 DIRECT
PXX-BUY = select, IAP-PREMIUM, 🟢 DIRECT
MEDIA = select, 🟢 DIRECT, PROXY, 🟡
SPEEDTEST = select, 🟢 DIRECT, PROXY, 🟡
FakeiAP-Server = select, Fake iAP Server 01, Fake iAP Server 02, Fake iAP Server 03
ADS = select, 🚫 ad-gif, 🔴 ad-block, 🟢 ad-pass

PROXY = url=http://www.google.com/generate_204, select, 🇺🇸, 🇳🇿
🇺🇸 = socks5, socks-us.windscribe.com,  1080, username=xxx, password=xxx
🇳🇿 = socks5, socks-nl.windscribe.com, 1080, username=xxx, password=notshare

# SSID
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
#SSID = ssid, default = PROXY, cellular = DIRECT, ”DivineEngine“ = PROXY

[Rule]
# 本地规则
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:force-remote-dns(Default:false),no-resolve

[Remote Rule]
https://raw.githubusercontent.com/langkhach270389/Scripting/master/Surge/rules/GoogleDrive.list,FINAL
https://raw.githubusercontent.com/langkhach270389/Scripting/master/Surge/rules/Netflix.list,MEDIA
https://raw.githubusercontent.com/langkhach270389/Scripting/master/Surge/rules/HBO.list,MEDIA
https://raw.githubusercontent.com/langkhach270389/Scripting/master/Surge/rules/YouTubeMusic.list,MEDIA
https://raw.githubusercontent.com/langkhach270389/Scripting/master/Surge/rules/Youtube.list,MEDIA
https://raw.githubusercontent.com/langkhach270389/Scripting/master/Surge/rules/Spotify.list,MEDIA
AND,((USER-AGENT,itunesstored*), (DOMAIN-KEYWORD,-buy.itunes.apple.com)),PXX-BUY
https://raw.githubusercontent.com/tinycarrot/tinycarrot/master/Surge/FakeiAP-Filter-Surge.txt,IAP-PREMIUM
https://raw.githubusercontent.com/bigdargon/hostsVN/master/option/hostsVN-surge-exceptions-rule.conf,DIRECT
https://raw.githubusercontent.com/langkhach270389/Scripting/master/Surge/rules/Direct.list,DIRECT
https://raw.githubusercontent.com/langkhach270389/Scripting/master/Surge/rules/Speedtest.list,SPEEDTEST
https://raw.githubusercontent.com/bigdargon/hostsVN/master/option/hostsVN-surge-rewrite.conf,ADS
https://raw.githubusercontent.com/bigdargon/hostsVN/master/option/hostsVN-surge-rule.conf,ADS
https://raw.githubusercontent.com/langkhach270389/Scripting/master/Surge/rules/BlockOTA.list,ADS
https://raw.githubusercontent.com/langkhach270389/Scripting/master/Surge/rules/Antirevoke.list,ADS

[URL Rewrite]
# > TikTok Unlock (By Choler)

(?<=_region=)CN(?=&) JP 307
(?<=&app_version=)15..(?=.?.?&) 1 307
(?<=\?version_code=)15..(?=.?.?&) 1 307

enable = true

[Remote Rewrite]

# [Script]
# enable = true

# [Remote Script]
# Script
# https://raw.githubusercontent.com/namcyeon/Scripting/master/Loon/Task.conf,Task
# https://raw.githubusercontent.com/namcyeon/Scripting/master/Loon/Script.conf,Script
# https://raw.githubusercontent.com/namcyeon/Scripting/master/Loon/Cookie.conf,Cookie

[MITM]
enable = true
hostname = *.googlevideo.com.bak
skip-server-cert-verify = true
ca-p12 = MIIJrgIBAzCCCXgGCSqGSIb3DQEHAaCCCWkEggllMIIJYTCCA/8GCSqGSIb3DQEHBqCCA/AwggPsAgEAMIID5QYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIYl/myyqpUtwCAggAgIIDuMYEzEUgSxIUScp1vSSooV2iePmy4Q7YP8cfnhaatGNnX+CC9/rDdPgDuz7k1D/7hYdaOsTKpXU9aUAxHvg9SLAWFm5dL4g/9MVk7Id8qCPMYbO2H+lQTChEN8iTpWdq+qlAC8VpqY1TTXhQTkCKF3cT+S68xZUMFDuX95INBUswjN+imGIYVKFBp4s0K7UDFpF0BMUD5HwR9U/QFsZ+ScCaNj/Y1p95LWPllUkeeb67uTOeXc55yEM+O8W/SGjJhgjdnvPgetCfLMc6RWREK0SNAGMzHibuvHHHm0fIBg5zwE+DjDdefwYMUghpQVl+0gSeASjsvP9mSgtm9+horQCw/ef0a3FxcKsmTzSE6o4dx37fEckEouYN/Ni+OWnKWb6eXeaL6yVD4gLDmEwV8lmgBG4OjYcdY9jeIBFkDzbG70eUvmj6/1olUtnOnkGY5ZMvCGhVr8K4ZJ80xuykgxgPI/5enNZZiS9cAuk85xAN+XeDvmQdIHF9TxMRyLGJyWUkczjV3DSPkqZ2hMFJRuOF5zbhZlCcJgkEdCYbb4sebYnGKOEVnfceFVK1yv33Hp+BcQDmqEm+gssrtNhJGCWtqTjT28WeGxGgAWOaY2e+isVJG6TvU1D+tHCl09WyLKM671a63jY6QvpWwRpSMkbcrGEMhQRo2IMrxhwkia9vkk+eDYRt4jJcG8gRAWB0crXuYMM/t0gxDKTiVF7aS0XEHWMkH7ATWFI/+Yta4dsVLAOACnTCarD80RH/xV5JK1KiAn5pSzy13fRwvYcHAluJ/7JHphVUtNYroNgfzdt5n65B7qD5PU4ykhVMfflZXom17VGwUqf750kx0fowU23XCUyWoifoGBbkR9mgGHBqZyMZHv+Z9iWPmpqJcfjL9UBX91Ulzg74IQocvNTHMVu3cLXx63OiQ6k4+FYZcvTiJyYpu7N36I/nLz61L3D2d8LaYLHAcvnsClfC6QRVVAU/wvQnhp2/oPh/l19KBX7QUnBKPU1oFLEV8y1G87IbN/LDJ0SUroS/McCojANgutTpKQJT+5jlid+GxZkEi4CXlTAUfu6/lioLdJugycPEKHu49zAmbDw8lUy5QRUbyjWrZk8tLu2bKzaxg5A21N9N/zKt9uXmcN5J/O1L8WIcAIXDytAmkyw7ez45EF631i6k2uJeuIxtBwRfwDyuw4FwKrsqw197FoqsvsMb68Tak2vVtzgs/rSQ1PL3acsLQ0CBZ9/Do1WxAb8azc4ko36JE7e0xtM43qswggVaBgkqhkiG9w0BBwGgggVLBIIFRzCCBUMwggU/BgsqhkiG9w0BDAoBAqCCBO4wggTqMBwGCiqGSIb3DQEMAQMwDgQI3rZrdI9fPuMCAggABIIEyGZyUi/orJ8LMBdjZFQaCNXECddtwPuKPg+QxAzpxC0/VSgdtHsOR/v8koAJgddmGJUDwLXGVcuasJ7YlhdIKpnvSzNBB7qjJoQBQ5dMsXVfcJaRwbhjMExjZyvUjCKH21lJ7yaxGQORtmIXTpx0FPQUprJtghF/C2ejA9QSW+SCjYY64dkvUovvXMDaddKWq+i0lOGKi0hvCjGiLobIovBpSfjX1EYTK5pmpBtWKro5Wnm/Q5r/OBU2+PyzlFCZdMdov7bIcUwnz4D1Oypn6woQol8N9AqgQL52pMweL8k0fK8YH3eChE5EP0JNc1X0vRTHhKiAB0Su5vjSVa5QU4ZBTCdNdwM7rr2NJMzMjF8g4y7fXMTVXdPUi1QeYihOqmcU2i0pmrk4zPeobGfzLIcgRSLf9qeP2r9Gw3yt3rjJMHgbx6QvBZ+5GZ8/iooQTbLjUj83QfdGeidkD+Auba9f8cPDiurDF+Pjt2FotaT3Vqx38qlaprBdlk7H1yVZtY2G5Y5pquiyPK/C+QwrXYWEocsJIAvAb3xhXalqkUs6ZmKTVQqlpUR0L/ogRmeJ0OxHYKbqy4Rg2eIcHogPEK2Xa2iiPFmG6AbWUnE8mmH5PunCPGuhcOxFYZAkpf96//c0J9ry52pcvR15ZIvmZdSLrhjD4pD+CElUKFS6izafXSyFQpjNuQI2aCnMNS/AFSe3kH6naARoOUnXFC7Wz+e69nOKs6G84/gV3xD4klk5vCza32e55MtUD9SX09+q9XItarBeBYCn3XCZk1sZADmg8gHxZzgEj3mA7slqsRnx7E80lz1UlHU4FSLkeMEU2u9/K1QA6VZzFfFRXtitZuam2Di98zCyftyb0D0DwlywSab/ww7VrROnBq3sozc7uo7eEiT8Jx9qd2kGNF+r9KI6QePBtATJzsgCNoPHNTdA7DNX4opD0bNsRtFHQLW3b9k1PeeAix1agcrqsDVV2PsWn9Qae9vY4zqwkNY+hjlmt2CRPG/5pX8COVn+dzqGHTksFg/NgVZsAj8NK4ZGf+QSRxSUo/5sYbu61Pj6TpyEIjOEPM+ylXdhziKhDTfw4GkrmTjlrQQ9T+7pqC86nYS8HH9ZcET+SecZK8kMPe7pwbzwHPWsl+OqHTP01KvEAogOL8fAZ7LsbaHlPoLHkHDQzxeep6ZKDnoCphjsf4oqSlcQzNh383mAr0YTPY8SaVV5G6Hh9mCHQqKWWmXhNd8rN/kqZn0H7KvfMJW2BGVWgCvYaE5m5sodhHYjSMGzgauV7O9DL3H+Az2Ztz0K2hj11xsz/C7nRVNOgV02rDvIEHw0asBPq2gYPC4OG/HutK+etT87z+tLftGO9V5+TMcIc4JKaNVOUg814DP59yo/WptH346rHwY7AqvgmEi6LJ1LLP9W6+HH1k3Fk6WEpOtDJS3YqV4EjswXGCtLXu6y/IvqLkyvT7NIZi/BYFf39xwJDvD5SbLM2jhCShG/HsD0/4qfqeGA/x4LLaM9Lyl091XeKWtY9XpP9nZzfgOJkk2rsBH29jS5d8lLkz+GhdzrROPIgHn+yaSsp8vIwr8L9h27+6/95kbUiQugOWEWdO/ZO+X/iyhThallmiNbJP+Qv3abUJgzcTE+MBcGCSqGSIb3DQEJFDEKHggAZQBIAHAAbzAjBgkqhkiG9w0BCRUxFgQU5gr9fNKSpq6pZ3g5Hca/uXOuY+cwLTAhMAkGBSsOAwIaBQAEFKXWG0IDj30Q2VfVGNWcVJ8iipuZBAgHvSM3D+pSUA==
ca-passphrase = eHpo